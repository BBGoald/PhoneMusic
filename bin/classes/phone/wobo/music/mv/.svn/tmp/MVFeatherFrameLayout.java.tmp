package phone.wobo.music.mv;

import java.util.ArrayList;
import java.util.List;

import com.lidroid.xutils.BitmapUtils;

import phone.wobo.music.R;
import phone.wobo.music.bll.OnlineLogic;
import phone.wobo.music.model.MVLabel;
import phone.wobo.music.util.ImageCache;
import phone.wobo.music.util.LoadingDialog;
import phone.wobo.music.util.SharedFileHelper;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.os.Message;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.FrameLayout;
import android.widget.GridView;
import android.widget.TextView;

public class MVFeatherFrameLayout extends FrameLayout implements
		OnItemClickListener {

	private Context mContext;
	// private WoboLoading loading;
	private final static int MV_FEATHER_FINISH = 3;
	private List<MVLabel> list;
	private GridView mv_feather;
	//private FinalBitmap fb;
	private BitmapUtils fb;
	private MVGridAdapter adapter;
	private TextView mv_feather_tv;
	private LoadingDialog loading;

	public MVFeatherFrameLayout(Context context, AttributeSet attrs) {
		super(context, attrs);
		this.mContext = context;
	}

	public MVFeatherFrameLayout(Context context) {
		this(context, null);
		this.mContext = context;
		LayoutInflater inflater = (LayoutInflater) context
				.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		loading = new LoadingDialog(mContext);
		View view = inflater.inflate(R.layout.lay_grid, this);
		list = new ArrayList<MVLabel>();
		fb = ImageCache
				.create(mContext, R.drawable.online_grid_loading_default);

		initView(view);
		loadData();
	}

	private void initView(View View) {
		mv_feather = (GridView) View.findViewById(R.id.gv_rank);
		mv_feather_tv = (TextView) View.findViewById(R.id.msg);
		adapter = new MVGridAdapter(mContext, fb);
		mv_feather.setAdapter(adapter);
		mv_feather.setOnItemClickListener(this);
	}

	private void loadData() {
		new Thread() {
			@Override
			public void run() {
				String json = SharedFileHelper.getPreference(mContext,
						MVUtil.MV_Name, MVUtil.MV_Version_Key);
				if (json == null || json.equals("")) {
					json = MVUtil.loadLabelData("version");
				}
				list = MVUtil.getMvLabelList(json);
				handler.sendEmptyMessage(MV_FEATHER_FINISH);
				MVUtil.updateMVCache(mContext, MVUtil.MV_Version_Key,
						MVUtil.loadLabelData("version"));
			}

		}.start();
	}

	private Handler handler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			if (msg.what == MV_FEATHER_FINISH) {
				loading.close();
				refreshFeatherView();
			}
		}

	};

	public void refreshFeatherView() {
		if (list == null || list.size() == 0) {
			if (OnlineLogic.isCloseNetwork(mContext)) {
				mv_feather_tv.setText(mContext.getResources().getString(
						R.string.network_connection_is_close));
			} else {
				mv_feather_tv.setText(mContext.getResources().getString(
						R.string.data_load_failure));
			}
			mv_feather_tv.setVisibility(View.VISIBLE);
			mv_feather.setVisibility(View.GONE);
			return;
		}
		mv_feather_tv.setVisibility(View.GONE);
		mv_feather.setVisibility(View.VISIBLE);
		adapter.setData(list);
	}

	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position,
			long id) {
		MVLabel label = list.get(position);
		if (label == null)
			return;
		Intent intent = new Intent();
		intent.setClass(mContext, MVShowActivity.class);
		intent.putExtra("key", "" + label.getId());
		intent.putExtra("name", label.getName());
		intent.putExtra("type", "version");
		mContext.startActivity(intent);

	}

}
